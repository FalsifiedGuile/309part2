// Storage of Users in Global JS Dictionary.
var users = {};
// Pre-generated User for Checking & Debugging.
users['nick'] = {'password': '123', 'email': '', 'scores': []};
users['ray'] = {'password': 'dong', 'email': '', 'scores': [5, 2, 9]};

class Register extends React.Component {
  constructor(props) {
    super(props);
  }

  render(props) {
    return (
      <div>
        <h3>Register</h3>
        <form>
          Username: <br/>
          <input type="text" name="user" value={this.props.username} onChange={this.props.onUserChange}/> <br/>
          Password: <br/>
          <input type="password" name="pass" value={this.props.hashpass} onChange={this.props.onPassChange}/> <br/><br/>
        </form>
      </div>
    );
  }
}

class Profile extends React.Component {
  constructor(props) {
    super(props);
  }

  render(props) {
    return (
      <div>
        <h3>Profile</h3>
        <form>
          Username: <br/>
          <input type="text" name="user" value = {this.props.username} readOnly/> <br/>
          Password: <br/>
          <input type="password" name="pass" value = {this.props.hashpass} onChange={this.props.onPassChange}/> <br/>
          Email: <br/>
          <input type="text" name="pass" value = {this.props.email} onChange={this.props.onEmailChange}/> <br/>
          Top Score: <br/>
          <input type="text" name="pass" value = {this.props.score} readOnly/> <br/><br/>
        </form>
      </div>
    );
  }
}

class Login extends React.Component {
  constructor(props) {
    super(props);
  }

  render(props) {
    return (
      <div>
        <h3>Login</h3>
        <form>
          Username: <br/>
          <input type="text" name="user" value={this.props.username} onChange={this.props.onUserChange}/> <br/>
          Password: <br/>
          <input type="password" name="pass" value={this.props.hashpass} onChange={this.props.onPassChange}/> <br/><br/>
        </form>
      </div>
    );
  }
}

class Main extends React.Component {
  constructor(props) {
    super(props);
    this.state = {view: 'login', username: '', hashpass: '', email: '', topscore: '', msg: ''};
    this.loginClick = this.loginClick.bind(this);
    this.toRegisterClick = this.toRegisterClick.bind(this);
    this.registerClick = this.registerClick.bind(this);
    this.toLoginClick = this.toLoginClick.bind(this);
    this.profileClick = this.profileClick.bind(this);
    this.onUserChange = this.onUserChange.bind(this);
    this.onPassChange = this.onPassChange.bind(this);
    this.onEmailChange = this.onEmailChange.bind(this);
    this.registerUser = this.registerUser.bind(this);
  }

  onUserChange(e) {
    this.setState({username: e.target.value });
  }

  onPassChange(e) {
    this.setState({hashpass: e.target.value });
  }

  onEmailChange(e) {
    this.setState({email: e.target.value });
  }

  loginClick() {
    // Invalid Input: If Username Or Password field are empty.
    if ((this.state.username == '') || (this.state.hashpass == '')) {
      this.setState({msg: 'User or Pass Missing!'});
    }
    // Otherwise, we query to MongoDB.
    else {
      // Login Route.
      $.ajax({
          url: '/api/login/'+this.state.username,
          method: 'POST',
          contentType: 'application/json',
          data: JSON.stringify({ name: this.state.username, pass: this.state.hashpass}) 
      }).done(function(response){
          if (response['checklogin'][0] == 1) {
            this.setState({view: 'profile', msg: ''});
          }
          else {
            this.setState({msg: 'Incorrect Info!'});
          }
      }.bind(this));

      // Populate Email Route.
      $.ajax({
          url: '/api/getemail/'+this.state.username,
          method: 'POST',
          contentType: 'application/json',
          data: JSON.stringify({ name: this.state.username }) 
      }).done(function(response){
 
      }.bind(this));
    }
  }

  toRegisterClick() {
    this.setState({view: 'register', 'username': '', 'hashpass': '', msg: ''});
  }

  registerClick() {
    // Invalid Input: If Username Or Password field are empty.
    if ((this.state.username == '') || (this.state.hashpass == '')) {
      this.setState({msg: 'User or Pass Missing!'});
    }
    // Otherwise, we query to MongoDB.
    else {
      $.ajax({
          url: '/api/checkuser/'+this.state.username,
          method: 'POST',
          contentType: 'application/json',
          data: JSON.stringify({ name: this.state.username }) 
      }).done(function(response){
          if (response['checkreg'][0] == 1) {
            this.setState({msg: 'Username Taken!'});
          }
          else {
            this.registerUser();
          }
      }.bind(this));
    }
  }

  registerUser() {
    $.ajax({
        url: '/api/register/'+this.state.username,
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ name: this.state.username, pass: this.state.hashpass }) 
    }).done(function(response){
        this.setState({msg: 'Successfully Registered!'});
        console.log(JSON.stringify(response));
    }.bind(this));
  }

  toLoginClick() {
    this.setState({view: 'login', 'username': '', 'hashpass': '', msg: ''});
  }

  profileClick() {
    $.ajax({
        url: '/api/update/'+this.state.username,
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ name: this.state.username, pass: this.state.hashpass, email: this.state.email }) 
    }).done(function(response){
        this.setState({msg: 'Successfully Updated!'});
        console.log(JSON.stringify(response));
    }.bind(this));
  }

  render(props) {
    // To save our current view state.
    var currentView;

    // Our assortment of buttons.
    var loginButton = null;
    var toRegister = null;
    var registerButton = null;
    var toLogin = null;
    var profileButton = null;
    var logoutButton = null;
    var errorMessage = <input type="text" name="error" id="error" value = {this.state.msg} readOnly/>;

    // To swap between views based on state.
    if (this.state.view == 'login') {
      currentView = <Login username={this.state.username} hashpass={this.state.hashpass} onUserChange={this.onUserChange} onPassChange={this.onPassChange}/>;
      loginButton = <LoginButton onClick={this.loginClick} />;
      toRegister = <ToRegister onClick={this.toRegisterClick} />;
    }
    else if (this.state.view == 'register') {
      currentView = <Register username={this.state.username} hashpass={this.state.hashpass} onUserChange={this.onUserChange} onPassChange={this.onPassChange}/>;
      registerButton = <RegisterButton onClick={this.registerClick} />;
      toLogin = <ToLogin onClick={this.toLoginClick} />;
    }
    else if (this.state.view == 'profile') {
      currentView = <Profile username={this.state.username} hashpass={this.state.hashpass} email={this.state.email} score={this.state.topscore} onPassChange={this.onPassChange} onEmailChange={this.onEmailChange}/>;
      profileButton = <UpdateProfileButton onClick={this.profileClick} />;
      logoutButton = <LogoutButton onClick={this.toLoginClick} />;
    }
    else {
      currentView = <Lobby />;
    }

    return (
        <div>
          <h3>Warehouse WARS MMMOG</h3>
          {currentView}
          {loginButton}
          {toRegister}
          {registerButton}
          {toLogin}
          {profileButton}
          {logoutButton} <br/><br/>
          {errorMessage}
        </div>
      );
  }
}

function LoginButton(props) {
  return (
      <button onClick={props.onClick}>
        Login
      </button>
    );
}

function ToRegister(props) {
  return (
      <button onClick={props.onClick}>
        To Register
      </button>
    );
}

function RegisterButton(props) {
  return (
      <button onClick={props.onClick}>
        Register
      </button>
    );
}

function ToLogin(props) {
  return (
      <button onClick={props.onClick}>
        To Login
      </button>
    );
}

function UpdateProfileButton(props) {
  return (
      <button onClick={props.onClick}>
        Update Profile
      </button>
    );
}

function LogoutButton(props) {
  return (
      <button onClick={props.onClick}>
        Logout
      </button>
    );
}

ReactDOM.render( <Main />, document.getElementById("Main"));

